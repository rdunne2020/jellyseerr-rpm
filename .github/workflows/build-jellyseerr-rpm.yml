name: Build Jellyseerr RPMs

# TODO Get this right
on:
  push:
    branches:
      - fedora-38
    paths:
      - .github/workflows/build-jellyseerr-rpm.yml
      - jellyseerr.spec
  workflow_dispatch:

concurrency:
  group: jellyseerr-rpmbuild
  cancel-in-progress: false

jobs:
  # Job ID rpm-build
  rpm-build:
    strategy:
      matrix:
        fedora-version: [38]
    # Spin up ubuntu runner, but use a fedora container to build
    name: Fedora ${{ matrix.fedora-version }} Jellyseerr Build
    runs-on: ubuntu-latest
    container:
      # TODO Make this configurable (use a matrix)
      image: fedora:${{ matrix.fedora-version }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Install Build Tools
        # Utilize YAML scalar block folding, these multiple lines will be turned into one when parsed
        run: >
          dnf install -y
          createrepo
          'dnf-command(builddep)'
          git
          rpmdevtools
          gcc
          rpm-build
          rpm-devel
          rpmlint
          make
          coreutils

      # Pull my repo down to get the spec file
      - name: Clone Repo
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.name "Jelly Bot"
          git config --global user.email "jelly-builder@rpm.com"

      # Setup the build structure defaults to ~/rpmubild
      - name: Prepare build-tree
        run: rpmdev-setuptree

      - name: install build deps
        run: dnf builddep -y jellyseerr.spec

      - name: download the jellyseer source
        run: spectool -g -R jellyseerr.spec

      - name: build rpm
        run: rpmbuild --define "_topdir ~/rpmbuild/" -ba SPECS/jellyseerr.spec

      - name: Switch to the branch we want to release from and create a tag for the release version, this should be pulled from the spec file
        run: |
          chown root:root .
          git fetch
          git checkout ${{ matrix.fedora-version }}
          git tag v$(grep "Version" jellyseerr.spec | awk '{print $2}')
          git remote -v
          git push origin v$(grep "Version" jellyseerr.spec | awk '{print $2}')

      - name: Upload RPM to Release
        uses: ncipollo/release-action@v1
        with:
          tag: v$(grep "Version" jellyseerr.spec | awk '{print $2}')
          commit: fedora-${{ matrix.fedora-version }}
          artifacts: "~/rpmbuild/RPMS/noarch/*.rpm"
          skipIfReleaseExists: true
