name: Build Jellyseerr RPMs

# TODO Get this right
on:
  push:
    paths:
      - .github/workflows/build-jellyseerr-rpm.yml
      - jellyseerr.spec
  # Manually run if need be
  workflow_dispatch:

concurrency:
  group: jellyseerr-rpmbuild
  cancel-in-progress: false

jobs:
  # Job ID rpm-build
  rpm-build:
    strategy:
      matrix:
        fedora-version: [42]
    # Spin up ubuntu runner, but use a fedora container to build
    name: Fedora ${{ matrix.fedora-version }} Jellyseerr Build
    runs-on: ubuntu-latest
    container:
      image: fedora:${{ matrix.fedora-version }}
    defaults:
      run:
        shell: bash

    steps:

      - name: Install Build Tools
        # Utilize YAML scalar block folding, these multiple lines will be turned into one when parsed
        run: >
          dnf install -y
          createrepo
          'dnf-command(builddep)' git
          rpmdevtools
          gcc
          rpm-build
          rpm-devel
          rpmlint
          make
          coreutils

      - name: Install Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Pull my repo down to get the spec file, utilize deploy key
      - name: Clone Repo
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.BOT_DEPLOY_KEY }}

      - name: Configure Git
        run: |
          git config --global user.name "Jelly Bot"
          git config --global user.email "jelly-builder@rpm.com"

      # Setup the build structure defaults to ${HOME}/rpmbuild
      - name: Prepare build-tree
        run: rpmdev-setuptree

      - name: install build deps
        run: dnf builddep -y jellyseerr.spec

      - name: download the jellyseer source
        run: spectool -g -R jellyseerr.spec

      - name: build rpm
        run: rpmbuild -ba jellyseerr.spec

      - name: Set Version Number in Github Env
        run: |
          VER=v$(grep "Version" jellyseerr.spec | awk '{print $2}')
          echo "VERSION=${VER}" >> $GITHUB_ENV

      #- name: Switch to the branch we want to release from and create a tag for the release version, this should be pulled from the spec file
      # - name: Create tag for version number to release to
      #   run: |
      #     chown root:root .
      #     git fetch
      #     git tag ${{ env.VERSION }}
      #     git remote -v
      #     git push origin ${{ env.VERSION }}

      - name: Upload RPM to Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          commit: main
          # /github/home should be the default ${HOME} and where the rpm lives
          artifacts: "/github/home/rpmbuild/RPMS/x86_64/*.rpm"
          skipIfReleaseExists: true
